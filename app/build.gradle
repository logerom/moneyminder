apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: 'jacoco.gradle'
apply plugin: 'com.adarshr.test-logger'
apply plugin: 'kotlin-android-extensions'
apply from: "../artifacts.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "de.logerbyte.moneyminder"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 300
        versionName "3.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        testOptions {
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures{
        dataBinding = true // for data binding
        viewBinding = true // for view binding
    }

    buildTypes {
        release {
            applicationIdSuffix ".release"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
    }

    // Max Error lines for Kotlin
    kapt {
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 5000)
        }
    }

    // Max Error lines for Java
    afterEvaluate {
        tasks.withType(JavaCompile.class) {
            options.compilerArgs << "-Xmaxerrs" << "5000"
        }
    }
}

/*configurations.all {
    resolutionStrategy {
        force 'com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}'
    }
}*/

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    // database
    implementation 'androidx.room:room-rxjava2:2.2.5'
    implementation 'androidx.room:room-rxjava2:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'
    debugImplementation "com.amitshekhar.android:debug-db:${rootProject.ext.roomDatabase}"

    // Livedata
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$archLifecycleVersion"

    // reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rxKotlin"

    // viewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    /*implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    */
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestUtil 'androidx.test:orchestrator:1.1.0'

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'

    implementation 'com.google.android.material:material:1.0.0'

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    // Using Dagger in androidTest and Robolectric too
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.android:flexbox:$flexboxVersion"
}

repositories {
    mavenCentral()
}
